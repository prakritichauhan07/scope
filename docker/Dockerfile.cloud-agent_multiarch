#stage 1
FROM ubuntu:16.04 as builder
WORKDIR /home/weave
RUN apt-get update
RUN apt-get install -y file make file git wget gcc libpcap-dev time
ARG SCOPE_SKIP_UI_ASSETS

RUN if [ `uname -m` = "aarch64" ] ; then \
       wget -q https://dl.google.com/go/go1.13.linux-arm64.tar.gz && \
       tar -xf go1.13.linux-arm64.tar.gz && \
       mv go /usr/local; \
    else \
       wget -q https://dl.google.com/go/go1.13.linux-amd64.tar.gz && \
       tar -xf go1.13.linux-amd64.tar.gz && \
       mv go /usr/local; \
    fi
WORKDIR /root/go/src/github.com/weaveworks
COPY / scope
WORKDIR scope
ENV GOROOT=/usr/local/go
ENV GOPATH=/root/go
ENV PATH=$GOPATH/bin:$GOROOT/bin:$PATH
RUN go get -u github.com/mjibson/esc
RUN make BUILD_IN_CONTAINER=false GO_BUILD_INSTALL_DEPS= prog/scope

#stage 2
FROM alpine:3.11.3
WORKDIR /home/weave
RUN apk add --no-cache bash conntrack-tools iproute2 util-linux curl
COPY --from=builder /root/go/src/github.com/weaveworks/scope /home/weave/
#RUN file /home/weave/scope
ENTRYPOINT ["/home/weave/scope", "--mode=probe", "--no-app", "--probe.docker=true"]

ARG revision
LABEL works.weave.role="system" \
      maintainer="Weaveworks <help@weave.works>" \
      org.opencontainers.image.title="cloud-agent" \
      org.opencontainers.image.source="https://github.com/weaveworks/scope" \
      org.opencontainers.image.revision="${revision}" \
      org.opencontainers.image.vendor="Weaveworks"
